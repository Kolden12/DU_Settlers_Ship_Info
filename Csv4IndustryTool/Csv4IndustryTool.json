{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"AddFuel = true --export: include fuel cost into calculations\n\nfunction Split(s, delimiter)\n    result = {};\n    for match in (s..delimiter):gmatch(\"(.-)\"..delimiter) do\n        table.insert(result, match);\n    end\n    return result;\nend\n\nfunction ShowHelp()\n    system.print(\"------------------------------------------------------------\")\n    system.print(\"enter honeycomb followed by quantity\")\n    system.print(\"ie: alu 156\")\n    system.print(\"alu - steel - wood - plas - fiber - lumi\")\n    system.print(\"------------------------------------------------------------\")\nend\n\nfor slot,element in pairs(unit)do -- checking elements in slots\n    if type(element)==\"table\"and type(element.export)==\"table\"then\n        if element.getClass then\n            if element.getClass()==\"ScreenUnit\"then \n                screen=element\n                element.activate()\n            elseif element.getClass()==\"CoreUnitDynamic\"then \n                core=element\n            else\n                --system.print(element.getElementClass())\n            end \n        end \n    end \nend\n\nif screen == nil then system.print(\"No screen found\");unit.exit() end\nif core == nil then system.print(\"No core found\");unit.exit() end\n\nlocal elements = core.getElementIdList();list = {};SpaceFuel = 0;AtmoFuel = 0;RestoredList={}\nelementsCount = #elements\n\nfor i = 1, #elements do\n    local ElementType = core.getElementNameById(elements[i]) \n    local item = system.getItem(core.getElementItemIdById(elements[i]))\n    local qty = 1\n    if string.match(item.displayNameWithSize, \"Space Fuel Tank xs\") then SpaceFuel = SpaceFuel + 200\n    elseif string.match(item.displayNameWithSize, \"Space Fuel Tank s\") then SpaceFuel = SpaceFuel + 800\n    elseif string.match(item.displayNameWithSize, \"Space Fuel Tank m\") then SpaceFuel = SpaceFuel + 3200\n    elseif string.match(item.displayNameWithSize, \"Space Fuel Tank l\") then SpaceFuel = SpaceFuel + 25600\n    elseif string.match(item.displayNameWithSize, \"Atmospheric Fuel Tank xs\") then AtmoFuel = AtmoFuel + 200\n    elseif string.match(item.displayNameWithSize, \"Atmospheric Fuel Tank s\") then AtmoFuel = AtmoFuel + 800\n    elseif string.match(item.displayNameWithSize, \"Atmospheric Fuel Tank m\") then AtmoFuel = AtmoFuel + 3200\n    elseif string.match(item.displayNameWithSize, \"Atmospheric Fuel Tank l\") then AtmoFuel = AtmoFuel + 25600\n    end\n    \n    local RestoCount = core.getElementRestorationsById(elements[i])\n    local MaxResto = core.getElementMaxRestorationsById(elements[i])\n    if RestoCount == MaxResto then\n        --system.print(\"No restored item found\")\n        else\n   table.insert(RestoredList,item.displayNameWithSize..\" (\"..RestoCount..\"/\"..MaxResto..\")\")\n              \nend    \n    \n    for j = 1, #list do\n        if list[j].l == item.displayNameWithSize then\n            qty = list[j].q +1\n            table.remove(list,j)\n            break            \n        end\n    end\n    table.insert(list,{l = item.displayNameWithSize,q = qty})\nend\nsystem.print(json.encode(RestoredList))\nunit.setTimer(\"upd\",1)\nalu,plas,steel,fiber,wood,lumi = 0,0,0,0,0,0\nShowHelp()","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"},{"code":"local str, str2 = \"\", \"\"\n\nfor j = 1, #list do\n    str = str .. '{\"Name\":\"'..list[j].l..'\",\"Quantity\":'..list[j].q..'},'\nend\n\nstr = str .. '{\"Name\": \"Matte Aluminium\",\"Quantity\":'..alu..'},'\nstr = str .. '{\"Name\": \"White pattern plastic\",\"Quantity\":'..plas..'},'\nstr = str .. '{\"Name\": \"White pattern wood\",\"Quantity\":'..wood..'},'\nstr = str .. '{\"Name\": \"Matte Steel\",\"Quantity\":'..steel..'},'\nstr = str .. '{\"Name\": \"White pattern carbon fiber\",\"Quantity\":'..fiber..'},'\nstr = str .. '{\"Name\": \"Luminescent White Glass\",\"Quantity\":'..lumi..'},'\n\nif AddFuel then\n    str = str .. '{\"Name\": \"Nitron Fuel\",\"Quantity\":'..AtmoFuel..'},'\n    str = str .. '{\"Name\": \"Kergon-X2 fuel\",\"Quantity\":'..SpaceFuel..'},'\nend\n\nfor k = 1, #RestoredList do\n    str2 = str2 .. RestoredList[k]..' '\n    --system.print(RestoredList[j])\nend\n\n\nlocal ScreenContent = [[-- []]..str:sub(1, -2)..[[]\n\nlocal Layer = createLayer();local rx, ry = getResolution()\nlocal font = loadFont('Play', 44);local font2 = loadFont('RobotoCondensed', 20)\nsetNextTextAlign(Layer, AlignH_Center, AlignV_Middle)\naddText(Layer, font, \"]]..construct.getName().. [[ Scan Complete\", rx/2,ry*0.1) \nsetNextTextAlign(Layer, AlignH_Center, AlignV_Middle)\naddText(Layer, font, \"]]..elementsCount .. [[ elements (]]..#list .. [[ uniques, ]]..#RestoredList .. [[ restored)\", rx/2,ry*0.2) \naddText(Layer, font2, \"Add honeycombs from LUA chat\", rx*0.2,ry*0.35)\naddText(Layer, font2, \"Aluminium (alu): ]]..alu.. [[m3\", rx/2,ry*0.35) \naddText(Layer, font2, \"Plastic (plas): ]]..plas.. [[m3\", rx/2,ry*0.4) \naddText(Layer, font2, \"Carbon Fiber (fiber): ]]..fiber.. [[m3\", rx/2,ry*0.45) \naddText(Layer, font2, \"Steel (steel): ]]..steel.. [[m3\", rx/2,ry*0.5) \naddText(Layer, font2, \"Wood (wood): ]]..wood.. [[m3\", rx/2,ry*0.55) \naddText(Layer, font2, \"Luminescent Glass (lumi): ]]..lumi.. [[m3\", rx/2,ry*0.6) \naddText(Layer, font2, \"Add Fuel: ]]..tostring(AddFuel).. [[\", rx*0.2,ry*0.7)\naddText(Layer, font2, \"Nitron Fuel: ]]..AtmoFuel.. [[L\", rx/2,ry*0.7) \naddText(Layer, font2, \"Kergon Fuel: ]]..SpaceFuel.. [[L\", rx/2,ry*0.75)\nsetNextTextAlign(Layer, AlignH_Center, AlignV_Middle)\nsetNextFillColor(Layer, 0.2, 0.3, 1.9, 1)\naddText(Layer, font2, 'right click > advanced > edit content to copy string', rx/2,ry*0.9) \n\n-- Restored Elements:\n-- []]..str2..[[]\n\n]]\n\nscreen.setRenderScript(ScreenContent)","filter":{"args":[{"value":"upd"}],"signature":"onTimer(tag)","slotKey":"-1"},"key":"1"},{"code":"local name = Split(text,\" \")[1]\nlocal qty = Split(text,\" \")[2]\nif name == \"alu\" then alu = qty;system.print(name..\": \"..qty) end\nif name == \"steel\" then steel = qty;system.print(name..\": \"..qty) end\nif name == \"wood\" then wood = qty;system.print(name..\": \"..qty) end\nif name == \"plas\" then plas = qty;system.print(name..\": \"..qty) end\nif name == \"fiber\" then fiber = qty;system.print(name..\": \"..qty) end\nif name == \"lumi\" then lumi = qty;system.print(name..\": \"..qty) end\n--ShowHelp()","filter":{"args":[{"variable":"*"}],"signature":"onInputText(text)","slotKey":"-4"},"key":"2"}],"methods":[],"events":[]}
